From 3098a3c53d6c5dc214ff3d6ed7cac7e5cf239929 Mon Sep 17 00:00:00 2001
From: Nathan Whitehead <nwhitehe@gmail.com>
Date: Sun, 9 May 2021 18:28:18 +0000
Subject: [PATCH] Changes

---
 Lib/platform.py                   |  4 ++--
 Lib/test/support/__init__.py      |  2 ++
 Lib/test/support/script_helper.py |  5 +++++
 Modules/socketmodule.h            |  2 ++
 Modules/timemodule.c              | 12 ++++++++++++
 Python/ceval.c                    | 14 ++++++++++++++
 Python/fileutils.c                |  4 ++++
 config.sub                        |  6 +++++-
 configure                         |  6 ++++++
 configure.ac                      |  6 ++++++
 10 files changed, 58 insertions(+), 3 deletions(-)

diff --git a/Lib/platform.py b/Lib/platform.py
index b7e7bc4..5b804d2 100755
--- a/Lib/platform.py
+++ b/Lib/platform.py
@@ -605,7 +605,7 @@ def _syscmd_uname(option, default=''):
 
     """ Interface to the system's uname command.
     """
-    if sys.platform in ('dos', 'win32', 'win16'):
+    if sys.platform in ('dos', 'win32', 'win16', 'emscripten'):
         # XXX Others too ?
         return default
 
@@ -627,7 +627,7 @@ def _syscmd_file(target, default=''):
         default in case the command should fail.
 
     """
-    if sys.platform in ('dos', 'win32', 'win16'):
+    if sys.platform in ('dos', 'win32', 'win16', 'emscripten'):
         # XXX Others too ?
         return default
 
diff --git a/Lib/test/support/__init__.py b/Lib/test/support/__init__.py
index fb09e06..64c5f96 100644
--- a/Lib/test/support/__init__.py
+++ b/Lib/test/support/__init__.py
@@ -952,6 +952,8 @@ if os.name == 'nt':
                   'Unicode filename tests may not be effective'
                   % (TESTFN_UNENCODABLE, TESTFN_ENCODING))
             TESTFN_UNENCODABLE = None
+elif sys.platform == 'emscripten':
+    pass
 # Mac OS X denies unencodable filenames (invalid utf-8)
 elif sys.platform != 'darwin':
     try:
diff --git a/Lib/test/support/script_helper.py b/Lib/test/support/script_helper.py
index 8351998..d9a4273 100644
--- a/Lib/test/support/script_helper.py
+++ b/Lib/test/support/script_helper.py
@@ -9,6 +9,7 @@ import os.path
 import subprocess
 import py_compile
 import zipfile
+import unittest
 
 from importlib.util import source_from_cache
 from test.support import make_legacy_pyc, strip_python_stderr
@@ -34,6 +35,8 @@ def interpreter_requires_environment():
     situation.  PYTHONPATH or PYTHONUSERSITE are other common environment
     variables that might impact whether or not the interpreter can start.
     """
+    raise unittest.SkipTest('no subprocess')
+
     global __cached_interp_requires_environment
     if __cached_interp_requires_environment is None:
         # If PYTHONHOME is set, assume that we need it
@@ -172,6 +175,8 @@ def spawn_python(*args, stdout=subprocess.PIPE, stderr=subprocess.STDOUT, **kw):
     kw is extra keyword args to pass to subprocess.Popen. Returns a Popen
     object.
     """
+    raise unittest.SkipTest('no subprocess')
+
     cmd_line = [sys.executable]
     if not interpreter_requires_environment():
         cmd_line.append('-E')
diff --git a/Modules/socketmodule.h b/Modules/socketmodule.h
index dff1f8f..6014853 100644
--- a/Modules/socketmodule.h
+++ b/Modules/socketmodule.h
@@ -154,6 +154,8 @@ typedef int socklen_t;
 extern "C" {
 #endif
 
+#undef AF_VSOCK
+
 /* Python module and C API name */
 #define PySocket_MODULE_NAME    "_socket"
 #define PySocket_CAPI_NAME      "CAPI"
diff --git a/Modules/timemodule.c b/Modules/timemodule.c
index 096911d..2d26beb 100644
--- a/Modules/timemodule.c
+++ b/Modules/timemodule.c
@@ -50,6 +50,14 @@
 
 #define SEC_TO_NS (1000 * 1000 * 1000)
 
+#include "emscripten.h"
+EM_JS(int, PYJS_Sleep, (double t), {
+    if (typeof JS_Sleep === 'function') {
+        return JS_Sleep(t);
+    }
+    return 0;
+});
+
 /* Forward declarations */
 static int pysleep(_PyTime_t);
 
@@ -1844,6 +1852,9 @@ PyInit_time(void)
 static int
 pysleep(_PyTime_t secs)
 {
+#ifdef __EMSCRIPTEN__
+    return PYJS_Sleep(_PyTime_AsSecondsDouble(secs));
+#else
     _PyTime_t deadline, monotonic;
 #ifndef MS_WINDOWS
     struct timeval timeout;
@@ -1915,4 +1926,5 @@ pysleep(_PyTime_t secs)
     } while (1);
 
     return 0;
+#endif
 }
diff --git a/Python/ceval.c b/Python/ceval.c
index 1873e37..208663a 100644
--- a/Python/ceval.c
+++ b/Python/ceval.c
@@ -1,3 +1,13 @@
+#include "emscripten.h"
+
+EM_JS(int, PYJS_KeyboardInterrupt, (void), {
+    if (typeof JS_KeyboardInterrupt === 'function') {
+        if (JS_KeyboardInterrupt()) {
+            return 1;
+        }
+    }
+    return 0;
+});
 
 /* Execute compiled code */
 
@@ -1197,6 +1207,10 @@ main_loop:
            event needs attention (e.g. a signal handler or
            async I/O handler); see Py_AddPendingCall() and
            Py_MakePendingCalls() above. */
+        if (PYJS_KeyboardInterrupt()) {
+            PyErr_SetString(PyExc_KeyboardInterrupt, "");
+            goto error;
+        }
 
         if (_Py_atomic_load_relaxed(eval_breaker)) {
             opcode = _Py_OPCODE(*next_instr);
diff --git a/Python/fileutils.c b/Python/fileutils.c
index 3e1311c..a82f287 100644
--- a/Python/fileutils.c
+++ b/Python/fileutils.c
@@ -1131,6 +1131,9 @@ _Py_get_inheritable(int fd)
 static int
 set_inheritable(int fd, int inheritable, int raise, int *atomic_flag_works)
 {
+#ifdef EMSCRIPTEN
+    return 0;
+#else
 #ifdef MS_WINDOWS
     HANDLE handle;
     DWORD flags;
@@ -1261,6 +1264,7 @@ set_inheritable(int fd, int inheritable, int raise, int *atomic_flag_works)
     }
     return 0;
 #endif
+#endif
 }
 
 /* Make the file descriptor non-inheritable.
diff --git a/config.sub b/config.sub
index ba37cf9..7586055 100755
--- a/config.sub
+++ b/config.sub
@@ -118,7 +118,8 @@ case $maybe_os in
   linux-musl* | linux-uclibc* | uclinux-uclibc* | uclinux-gnu* | kfreebsd*-gnu* | \
   knetbsd*-gnu* | netbsd*-gnu* | netbsd*-eabi* | \
   kopensolaris*-gnu* | cloudabi*-eabi* | \
-  storm-chaos* | os2-emx* | rtmk-nova*)
+  storm-chaos* | os2-emx* | rtmk-nova* | \
+  emscripten)
     os=-$maybe_os
     basic_machine=`echo "$1" | sed 's/^\(.*\)-\([^-]*-[^-]*\)$/\1/'`
     ;;
@@ -250,6 +251,7 @@ case $basic_machine in
 	| am33_2.0 \
 	| arc | arceb \
 	| arm | arm[bl]e | arme[lb] | armv[2-8] | armv[3-8][lb] | armv6m | armv[78][arm] \
+        | asmjs \
 	| avr | avr32 \
 	| ba \
 	| be32 | be64 \
@@ -1522,6 +1524,8 @@ case $os in
 			;;
 		esac
 		;;
+        -emscripten)
+                ;;
 	-nacl*)
 		;;
 	-ios)
diff --git a/configure b/configure
index 936f3d4..a9742d0 100755
--- a/configure
+++ b/configure
@@ -3268,6 +3268,9 @@ then
 	*-*-cygwin*)
 		ac_sys_system=Cygwin
 		;;
+	asmjs-*-*)
+		ac_sys_system=Emscripten
+		;;
 	*-*-vxworks*)
 	    ac_sys_system=VxWorks
 	    ;;
@@ -3318,6 +3321,9 @@ if test "$cross_compiling" = yes; then
 	*-*-cygwin*)
 		_host_cpu=
 		;;
+	asmjs-*-*)
+		_host_cpu=
+		;;
 	*-*-vxworks*)
 		_host_cpu=$host_cpu
 		;;
diff --git a/configure.ac b/configure.ac
index e02cc2c..0965bc0 100644
--- a/configure.ac
+++ b/configure.ac
@@ -392,6 +392,9 @@ then
 	*-*-cygwin*)
 		ac_sys_system=Cygwin
 		;;
+	asmjs-*-*)
+		ac_sys_system=Emscripten
+		;;
 	*-*-vxworks*)
 	    ac_sys_system=VxWorks
 	    ;;
@@ -441,6 +444,9 @@ if test "$cross_compiling" = yes; then
 	*-*-cygwin*)
 		_host_cpu=
 		;;
+	asmjs-*-*)
+		_host_cpu=
+		;;
 	*-*-vxworks*)
 		_host_cpu=$host_cpu
 		;;
-- 
2.25.1
